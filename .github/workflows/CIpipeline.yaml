name: Build and Push Docker Image of identity service

on:
  push:
    branches:
      - main

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Login to Azure Container Registry
      uses: azure/docker-login@v1
      with:
        login-server: ${{ secrets.ACR_USERNAME }}.azurecr.io
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Build Docker image
      run: |
        docker build  \
             --build-arg DB_NAME_REMOTE="${{ secrets.DB_NAME_REMOTE }}" \
             --build-arg DB_USER_REMOTE="${{ secrets.DB_USER_REMOTE }}" \
             --build-arg DB_PASSWORD_REMOTE="${{ secrets.DB_PASSWORD_REMOTE }}" \
             --build-arg DB_HOST_REMOTE="${{ secrets.DB_HOST_REMOTE }}" \
             --build-arg DB_DIALECT_REMOTE="${{ secrets.DB_DIALECT_REMOTE }}" \
             --build-arg DB_PORT_REMOTE="${{ secrets.DB_PORT_REMOTE }}" \
             --build-arg JWT_ACCESS_SECRET="${{ secrets.JWT_ACCESS_SECRET }}" \
             --build-arg JWT_REFRESH_SECRET="${{ secrets.JWT_REFRESH_SECRET }}" \
             --build-arg ACCESS_TOKEN_LIFETIME="${{ secrets.ACCESS_TOKEN_LIFETIME }}" \
             --build-arg REFRESH_TOKEN_LIFETIME="${{ secrets.REFRESH_TOKEN_LIFETIME }}" \
             --build-arg MAIL_TRAP_USER="${{ secrets.MAIL_TRAP_USER }}" \
             --build-arg MAIL_TRAP_PASSWORD="${{ secrets.MAIL_TRAP_PASSWORD }}" \
             --build-arg DB_ENV="${{ secrets.DB_ENV }}" \
             --build-arg REFERENCE_SERVICE_URL="${{ secrets.REFERENCE_SERVICE_URL }}" \
             -t identity .

    - name: Tag Docker image
      run: |
        docker tag identity ${{ secrets.ACR_USERNAME }}.azurecr.io/identity:latest

    - name: Push Docker image to Azure Container Registry
      run: |
        docker push ${{ secrets.ACR_USERNAME }}.azurecr.io/identity:latest
    
